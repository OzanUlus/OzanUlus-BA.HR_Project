@using Microsoft.AspNetCore.Identity
@using BA.HR_Project.Domain.Entities
@using BA.HR_Project.Infrastructure.Services.Concrate
@inject IDayOffService _dayOffService

@inject UserManager<AppUser> _userManager
@model DayOffViewModel

@{
    Layout = "_LayoutEmployeeSide";
}
@{
    ViewData["Title"] = "DemandDayOff";
}

<h1 class="custom-select">DemandDayOff</h1>
@if (ViewBag.ErrorMessages != null)
{
    <div class="alert alert-danger">
        <p>@ViewBag.ErrorMessages</p>
    </div>
}
<form asp-controller="DayOff" asp-action="DemandDayOff" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="StartDate" style="color: white;">Start Date</label>
        <input asp-for="StartDate" type="date" class="form-control custom-select" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>


    @*<div class="form-group">
        <label asp-for="FinishDate" style="color: white;">Finish Date</label>
        <input asp-for="FinishDate" class="form-control custom-select" />
        <span asp-validation-for="FinishDate" class="text-danger"></span>
    </div>*@

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var dayOffTypeSelect = document.getElementById('DayOffType');
            var finishDateDiv = document.getElementById('FinishDateDiv');

            dayOffTypeSelect.addEventListener('change', function () {
                var selectedDayOffType = parseInt(this.value);

                // Tüm div'leri gizle
                finishDateDiv.style.display = 'none';
                // Diğer DayOffType'lara göre kontrol ekleyebilirsiniz
                if (selectedDayOffType === @((int)DayOffType.AnnualDayOff) ||
                    selectedDayOffType === @((int)DayOffType.ExcuseDayOff) ||
                    selectedDayOffType === @((int)DayOffType.SoldierLeave) ||
                    selectedDayOffType === @((int)DayOffType.SickDayOff)) {
                    finishDateDiv.style.display = 'block';  // görünür yap
                }
            });
        });
    </script>
    <div class="form-group" id="FinishDateDiv" style="display: none;">
        <label asp-for="FinishDate" style="color: white;">Finish Date</label>
        <input asp-for="FinishDate" type="date" class="form-control custom-select" />
        <span asp-validation-for="FinishDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" style="color: white;">Description</label>
        <textarea asp-for="Description" class="form-control custom-select"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    @{
        var user = await _userManager.GetUserAsync(User);
        var DayOffs = await _dayOffService.GetAll();
        var annualDayOffs = DayOffs.Context.Where(d => d.DayOffType == DayOffType.AnnualDayOff &&
        d.StartDate.Year == DateTime.Now.Year && d.AppUserId == user.Id);
        // var userdayoff = await Get(true, x => x.AppUserId == user.Id && x.Gender == Gender.Male || x.Gender == Gender.Female);
        var userDayoff = DayOffs.Context.Where(x => x.AppUserId == user.Id && x.Gender == Gender.Male || x.Gender==Gender.Female).FirstOrDefault();
        if (userDayoff == null)
        {
            <div class="form-group">
                <label asp-for="Gender" style="color: white;">Gender</label>
                <select asp-for="Gender" class="form-control custom-select">
                    <option value="@((int)Gender.Male)">Male</option>
                    <option value="@((int)Gender.Female)">Female</option>
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
        }
    }
   
    <div class="form-group">
        <label asp-for="DayOffType" style="color: white;">Day Off Type</label>
        <select asp-for="DayOffType" class="form-control custom-select">
           
            @{

                var userDayoff2 = DayOffs.Context.Where(x => x.AppUserId == user.Id && x.Gender == Gender.Male).FirstOrDefault();
                if (userDayoff2 != null)
                {
                    <option value="@((int)DayOffType.PaternityDayOff)">Paternity Day Off</option>
                    <option value="@((int)DayOffType.SoldierLeave)">Soldier Leave</option>
                }
            }
            @{

                var userDayoff3 = DayOffs.Context.Where(x => x.AppUserId == user.Id && x.Gender == Gender.Female).FirstOrDefault();
                if (userDayoff3 != null)
                {
                    <option value="@((int)DayOffType.MaternityDayOff)">Maternity Day Off</option>
                }
            }


            @{

                var userDayoff4 = DayOffs.Context.Where(x => x.AppUserId == user.Id && x.Gender == Gender.Female || x.Gender == Gender.Male).FirstOrDefault();
                if (userDayoff4 == null)
                {

                    <option value="@((int)DayOffType.MaternityDayOff)">Maternity Day Off</option>
                    <option value="@((int)DayOffType.BereavementDayOff)">Bereavement Day Off</option>
                    <option value="@((int)DayOffType.JobSearchDayOff)">Job Search Day Off</option>
                    <option value="@((int)DayOffType.MarriageDayOff)">Marriage Day Off</option>
                    <option value="@((int)DayOffType.ExcuseDayOff)">Excuse Day Off</option>
                    <option value="@((int)DayOffType.SickDayOff)">Accompanying Day Off</option>
                    <option value="@((int)DayOffType.SoldierLeave)">Soldier Leave</option>
                    <option value="@((int)DayOffType.PaternityDayOff)">Paternity Day Off</option>
                    <option value="@((int)DayOffType.AnnualDayOff)">Annual Day Off</option>
                }
                else
                {
                    <option value="@((int)DayOffType.BereavementDayOff)">Bereavement Day Off</option>
                    <option value="@((int)DayOffType.JobSearchDayOff)">Job Search Day Off</option>
                    <option value="@((int)DayOffType.MarriageDayOff)">Marriage Day Off</option>
                    <option value="@((int)DayOffType.ExcuseDayOff)">Excuse Day Off</option>
                    <option value="@((int)DayOffType.SickDayOff)">Accompanying Day Off</option>
                    <option value="@((int)DayOffType.AnnualDayOff)">Annual Day Off</option>
                }
            }
           
        </select>
        <span asp-validation-for="DayOffType" class="text-danger"></span>
    </div>
   @* <div class="form-group">
        <label asp-for="DayOffType">Day Off Type</label>
        <select asp-for="DayOffType" class="form-control">
            @foreach (var value in Enum.GetValues(typeof(DayOffType)))
            {
                <option value="@value">@Enum.GetName(typeof(DayOffType), value)</option>
            }
        </select>
        <span asp-validation-for="DayOffType" class="text-danger"></span>
    </div>*@
    <input asp-for="AppUserId" type="hidden" />
    @* <div class="form-group">
    <label asp-for="FinishDate "></label>
    <input asp-for="FinishDate " class="form-control" />
    <span asp-validation-for="FinishDate" class="text-danger"></span>
    </div>*@

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>

